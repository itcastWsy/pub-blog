import{_ as a,c as i,a2 as n,o as t}from"./chunks/framework.Y1dwPOgg.js";const l="/pub-blog/assets/0036e9ed-1420-44e7-9fdb-9c93ceeecac8.DyWsFLCE.gif",e="/pub-blog/assets/2.CcB4JQQz.gif",p="/pub-blog/assets/3.bmiapWYh.gif",r="/pub-blog/assets/image-20240815003658047.DQV0ApGN.png",h="/pub-blog/assets/4.nQeGSv0u.gif",d="/pub-blog/assets/image-20240815005522635.qa-n9tki.png",k="/pub-blog/assets/image-20240815005558987.7gvZMaNl.png",o="/pub-blog/assets/image-20240815005706165.Dyn_t0UU.png",E="/pub-blog/assets/image-20240815005751149.Cl-KLKye.png",c="/pub-blog/assets/5.wSzRUato.gif",g="/pub-blog/assets/qyvON.BIlEE7hE.png",b="/pub-blog/assets/6.C0JB5bro.gif",y="/pub-blog/assets/7.DxuWesAu.gif",m="/pub-blog/assets/8.BtTk45hS.gif",u="/pub-blog/assets/9.DHjVspCU.gif",F="/pub-blog/assets/10.C1EYInpB.gif",D=JSON.parse('{"title":"HarmonyOS Next 动画大全01-属性动画","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙开发技巧/HarmonyOS Next 动画大全/HarmonyOS Next 动画大全01-属性动画/HarmonyOS Next 动画大全01-属性动画.md","filePath":"鸿蒙开发技巧/HarmonyOS Next 动画大全/HarmonyOS Next 动画大全01-属性动画/HarmonyOS Next 动画大全01-属性动画.md","lastUpdated":1732449046000}'),C={name:"鸿蒙开发技巧/HarmonyOS Next 动画大全/HarmonyOS Next 动画大全01-属性动画/HarmonyOS Next 动画大全01-属性动画.md"};function B(x,s,v,f,A,q){return t(),i("div",null,s[0]||(s[0]=[n('<h1 id="harmonyos-next-动画大全01-属性动画" tabindex="-1">HarmonyOS Next 动画大全01-属性动画 <a class="header-anchor" href="#harmonyos-next-动画大全01-属性动画" aria-label="Permalink to &quot;HarmonyOS Next 动画大全01-属性动画&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>动画，指的是我们应用中的元素，在发生位置、大小、颜色、形状等属性变化时，可以产出一个缓慢变化的效果。让用户的焦点一直跟随</p><p>在应用的行动中，增加用户使用的体验和让用户知道当前的行动进度。</p><p>如下图的就是有无动画的效果对比：(<em>图片来自华为鸿蒙应用开发文档</em>)</p><p><img src="https://alliance-communityfile-drcn.dbankcdn.com/FileServer/getFile/cmtyPub/011/111/111/0000000000011111111.20240813092100.74430171962011375350726834762233:50001231000000:2800:7AB76D86444207B1B1944C345569A4BF364A1ACC4A7D63F7E09FFF25FB1D9333.gif?needInitFileName=true?needInitFileName=true" alt="0000000000011111111.20240813092100.74430171962011375350726834762233:50001231000000:2800:7AB76D86444207B1B1944C345569A4BF364A1ACC4A7D63F7E09FFF25FB1D9333.gif"></p><p>另外，我们在使用手机应用这么多年中，动画的效果比比皆是。</p><p><strong>网易云音乐</strong></p><p><img src="'+l+'" alt="0036e9ed-1420-44e7-9fdb-9c93ceeecac8"></p><p><strong>酷我音乐</strong></p><p><img src="'+e+'" alt="2"></p><p><strong>酷狗音乐</strong></p><p><img src="'+p+'" alt="3"></p><h2 id="动画分类" tabindex="-1">动画分类 <a class="header-anchor" href="#动画分类" aria-label="Permalink to &quot;动画分类&quot;">​</a></h2><p>在 Harmony Next中，动画的分类主要有以下几种</p><p><img src="'+r+'" alt="image-20240815003658047"></p><p>那么我们今天主要讲解前面的两种： <strong>属性动画</strong>和<strong>帧动画</strong>。</p><p>属性动画又分为 <strong>属性动画 animation</strong> 和 <strong>显式动画 animateTo</strong>， 帧动画就是 <strong>@ohos.animator (动画)</strong></p><p><strong>这篇文章只讲解属性动画 animation</strong>。后续的其他动画会陆续发表。</p><p>那为什么将他们归类到一起呢，因为他们核心思想都是利用常见的样式属性，指定开始状态和结束状态，从而实现动画效果。</p><p>下面我们就直接开始吧。</p><h2 id="可以实现动画的属性" tabindex="-1">可以实现动画的属性 <a class="header-anchor" href="#可以实现动画的属性" aria-label="Permalink to &quot;可以实现动画的属性&quot;">​</a></h2><p>首先我们需要理解具体那些样式属性可以出现动画效果。参考官网给出的定义：</p><table tabindex="0"><thead><tr><th>分类</th><th>说明</th></tr></thead><tbody><tr><td>布局属性</td><td>位置、大小、内边距、外边距、对齐方式、权重等。</td></tr><tr><td>仿射变换</td><td>平移、旋转、缩放、锚点等。</td></tr><tr><td>背景</td><td>背景颜色、背景模糊等。</td></tr><tr><td>内容</td><td>文字大小、文字颜色，图片对齐方式、模糊等。</td></tr><tr><td>前景</td><td>前景颜色等。</td></tr><tr><td>Overlay</td><td>Overlay属性等。</td></tr><tr><td>外观</td><td>透明度、圆角、边框、阴影等。</td></tr></tbody></table><p>以上的这些属性都可以简单总结为一个原则： 存在中间状态的属性可以有动画属性。那什么又是中间状态呢：</p><p>比如人的高度发展是存在中间状态的 ： <strong>小万的身高由100cm 长到 146cm</strong>，那么中间的状态有 <strong>101cm、102cm、。。146cm</strong>等。</p><p>所以上面表格中的 <strong>宽度、坐标、边距、缩放、背景颜色(rgb(0,0,0) -&gt;rgb(255,255,255)) 等就都存在中间状态</strong></p><hr><p>同理 人的性别 或者 人的生死是不存在中间状态的：<strong>小万男生变成女生？？？ 小万生变到死？？？</strong></p><p>所以<strong>可见性-visibility、优先级-zIndex</strong> 都是不存在中间状态的 因此就没有办法实现动画效果</p><h2 id="属性动画-animation" tabindex="-1">属性动画 animation <a class="header-anchor" href="#属性动画-animation" aria-label="Permalink to &quot;属性动画 animation&quot;">​</a></h2><p>属性动画 animation 是我们最简单实现动画的技术了。直接上效果</p><p><img src="'+h+`" alt="4"></p><p><strong>代码</strong></p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 缩放倍数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @State</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  scaleXY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 背景颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @State</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bgColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;#0094ff&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点我就生气&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scaleXY,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          y: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scaleXY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backgroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.bgColor)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // ️️ ❤️❤️❤️ 属性动画 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // 点击修改属性</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scaleXY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.bgColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;#f00&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><strong>代码解释</strong></p><ol><li><p>设置样式 初始属性</p><p><img src="`+d+'" alt="image-20240815005522635"></p></li><li><p>给按钮元素添加上样式属性</p><p><img src="'+k+'" alt="image-20240815005558987"></p></li><li><p>给按钮设置属性动画 <code>animation</code></p><p><img src="'+o+'" alt="image-20240815005706165"></p></li><li><p>点击按钮时，修改属性，动画自动生效</p><p><img src="'+E+`" alt="image-20240815005751149"></p><p>最后需要注意的是：在animation<strong>之上</strong>的样式属性会有动画效果，在animation<strong>之下</strong>的样式属性不会有动画效果</p><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点我就生气&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 在animation之上的样式属性会有动画效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scaleXY,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      y: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scaleXY</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({})</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 在animation之下的样式属性不会有动画效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backgroundColor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.bgColor)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><img src="`+c+`" alt="5"></p></li></ol><h2 id="属性动画-animation-参数" tabindex="-1">属性动画 animation 参数 <a class="header-anchor" href="#属性动画-animation-参数" aria-label="Permalink to &quot;属性动画 animation 参数&quot;">​</a></h2><p>属性动画接收传入配置参数实现调整动画的执行过程。如动画执行时间、次数等等。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>animation(配置参数)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><table tabindex="0"><thead><tr><th>名称</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>duration</td><td>动画执行时间，单位毫秒</td><td>1000</td></tr><tr><td>tempo</td><td>动画执行速度，默认是1，最小是0</td><td>1</td></tr><tr><td>curve</td><td>动画曲线 比如匀速、先快后慢等</td><td>Curve.linear</td></tr><tr><td>delay</td><td>延迟时间 单位毫秒</td><td>1000</td></tr><tr><td>iterations</td><td>动画执行次数，-1 为无限</td><td>1</td></tr><tr><td>playMode</td><td>动画播放模式 如播放两次时，每次都是从头开始播放</td><td>PlayMode.Normal</td></tr><tr><td>onFinish</td><td>动画结束的回调函数</td><td></td></tr></tbody></table><h3 id="duration" tabindex="-1">duration <a class="header-anchor" href="#duration" aria-label="Permalink to &quot;duration&quot;">​</a></h3><p>动画执行时间比较好理解，根据你传入的时间来决定整个动画多长时间执行完</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.animation({</span></span>
<span class="line"><span>  // 500毫秒执行完毕</span></span>
<span class="line"><span>  duration: 500,</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="tempo" tabindex="-1">tempo <a class="header-anchor" href="#tempo" aria-label="Permalink to &quot;tempo&quot;">​</a></h3><p>执行速度、默认是1。最小值是0。如果</p><ol><li>duration为1 ，tempo为1，那么动画1s执行完毕</li><li>duration为1 ，tempo为0.1，那么动画10s执行完毕</li></ol><h3 id="curve" tabindex="-1">curve <a class="header-anchor" href="#curve" aria-label="Permalink to &quot;curve&quot;">​</a></h3><p>动画曲线，在动画执行时间一定的情况下，执行动画的速度可以快可慢，举个不恰当的例子：</p><p>假设小万要在公司花1分钟走到厕所：</p><ol><li>小万可以匀速的走完</li><li>小万一开始不着急，<strong>慢慢走</strong>，中途突然来状况了，后半段路就要<strong>走快一点</strong> 先慢后快</li><li>小万一开始很着急，<strong>跑着去</strong>，中途忍不住了，也干脆放弃了，后半段路就走慢一点 先快后慢</li></ol><p>可选值参考：</p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Linear</strong></td><td style="text-align:left;">表示动画从头到尾的速度都是相同的。</td></tr><tr><td style="text-align:left;">Ease</td><td style="text-align:left;">表示动画以低速开始，然后加快，在结束前变慢，CubicBezier(0.25, 0.1, 0.25, 1.0)。</td></tr><tr><td style="text-align:left;">EaseIn</td><td style="text-align:left;">表示动画以低速开始，CubicBezier(0.42, 0.0, 1.0, 1.0)。</td></tr><tr><td style="text-align:left;">EaseOut</td><td style="text-align:left;">表示动画以低速结束，CubicBezier(0.0, 0.0, 0.58, 1.0)。</td></tr><tr><td style="text-align:left;">EaseInOut</td><td style="text-align:left;">表示动画以低速开始和结束，CubicBezier(0.42, 0.0, 0.58, 1.0)。</td></tr><tr><td style="text-align:left;">FastOutSlowIn</td><td style="text-align:left;">标准曲线，CubicBezier(0.4, 0.0, 0.2, 1.0)。</td></tr><tr><td style="text-align:left;">LinearOutSlowIn</td><td style="text-align:left;">减速曲线，CubicBezier(0.0, 0.0, 0.2, 1.0)。</td></tr><tr><td style="text-align:left;">FastOutLinearIn</td><td style="text-align:left;">加速曲线，CubicBezier(0.4, 0.0, 1.0, 1.0)。</td></tr><tr><td style="text-align:left;">ExtremeDeceleration</td><td style="text-align:left;">急缓曲线，CubicBezier(0.0, 0.0, 0.0, 1.0)。</td></tr><tr><td style="text-align:left;">Sharp</td><td style="text-align:left;">锐利曲线，CubicBezier(0.33, 0.0, 0.67, 1.0)。</td></tr><tr><td style="text-align:left;">Rhythm</td><td style="text-align:left;">节奏曲线，CubicBezier(0.7, 0.0, 0.2, 1.0)。</td></tr><tr><td style="text-align:left;">Smooth</td><td style="text-align:left;">平滑曲线，CubicBezier(0.4, 0.0, 0.4, 1.0)。</td></tr><tr><td style="text-align:left;">Friction</td><td style="text-align:left;">阻尼曲线，CubicBezier(0.2, 0.0, 0.2, 1.0)。</td></tr></tbody></table><p>再配上一张图参考</p><p><img src="`+g+`" alt="img"></p><h3 id="delay" tabindex="-1">delay <a class="header-anchor" href="#delay" aria-label="Permalink to &quot;delay&quot;">​</a></h3><p>延迟时间，默认为0，当你设置了之后，执行动画时会先延迟，然后再开始执行</p><h3 id="iterations" tabindex="-1">iterations <a class="header-anchor" href="#iterations" aria-label="Permalink to &quot;iterations&quot;">​</a></h3><p>动画执行次数，默认为1次，-1为无限</p><h3 id="playmode" tabindex="-1">playMode <a class="header-anchor" href="#playmode" aria-label="Permalink to &quot;playMode&quot;">​</a></h3><p>动画播放模式，提供4个选项</p><table tabindex="0"><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">Normal</td><td style="text-align:left;">动画正向播放。</td></tr><tr><td style="text-align:left;">Reverse</td><td style="text-align:left;">动画反向播放。</td></tr><tr><td style="text-align:left;">Alternate</td><td style="text-align:left;">动画在奇数次（1、3、5...）正向播放，在偶数次（2、4、6...）反向播放。</td></tr><tr><td style="text-align:left;">AlternateReverse</td><td style="text-align:left;">动画在奇数次（1、3、5...）反向播放，在偶数次（2、4、6...）正向播放。</td></tr></tbody></table><p>理解为类似开车一样，从出发地A 然后开到终点B 如果 一次路途看成是执行一次动画的话，那么执行4次动画时：</p><ol><li><strong>Normal</strong><ol><li>A-B</li><li>A-B</li><li>A-B</li><li>A-B</li></ol></li><li><strong>Reverse</strong><ol><li>B-A</li><li>B-A</li><li>B-A</li><li>B-A</li></ol></li><li><strong>Alternate</strong><ol><li>A-B</li><li>B-A</li><li>A-B</li><li>B-A</li></ol></li><li><strong>AlternateReverse</strong><ol><li>B-A</li><li>A-B</li><li>B-A</li><li>A-B</li></ol></li></ol><h4 id="初始代码" tabindex="-1">初始代码 <a class="header-anchor" href="#初始代码" aria-label="Permalink to &quot;初始代码&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  @State</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  translateX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;点我就移动&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">translate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.translateX })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          iterations: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          playMode: PlayMode.Normal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.translateX </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 240</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alignItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HorizontalAlign.Start)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h4 id="normal" tabindex="-1">Normal <a class="header-anchor" href="#normal" aria-label="Permalink to &quot;Normal&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iterations: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playMode: PlayMode.Normal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol><li>A-B</li><li>A-B</li><li>A-B</li><li>A-B</li></ol><p><img src="`+b+`" alt="6"></p><h4 id="reverse" tabindex="-1">Reverse <a class="header-anchor" href="#reverse" aria-label="Permalink to &quot;Reverse&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iterations: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playMode: PlayMode.Reverse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol><li>B-A</li><li>B-A</li><li>B-A</li><li>B-A</li></ol><p><img src="`+y+`" alt="7"></p><h4 id="alternate" tabindex="-1">Alternate <a class="header-anchor" href="#alternate" aria-label="Permalink to &quot;Alternate&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iterations: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playMode: PlayMode.Alternate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol><li>A-B</li><li>B-A</li><li>A-B</li><li>B-A</li></ol><p><img src="`+m+'" alt="8"></p><h4 id="alternatereverse" tabindex="-1">AlternateReverse <a class="header-anchor" href="#alternatereverse" aria-label="Permalink to &quot;AlternateReverse&quot;">​</a></h4><ol><li>B-A</li><li>A-B</li><li>B-A</li><li>A-B</li></ol><p><img src="'+u+`" alt="9"></p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">animation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iterations: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  playMode: PlayMode.AlternateReverse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="onfinish" tabindex="-1">onFinish <a class="header-anchor" href="#onfinish" aria-label="Permalink to &quot;onFinish&quot;">​</a></h3><p>动画执行完成后回调函数</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.animation({</span></span>
<span class="line"><span>  onFinish() {</span></span>
<span class="line"><span>    AlertDialog.show({ message: &quot;奥运落幕啦&quot; })</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+F+'" alt="10"></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>动画能够提升用户体验并使应用程序更加生动有趣。通过使用动画，开发者可以平滑地展示UI元素的变化，例如位置、大小、颜色或形状的变化。本文档将重点介绍Harmony Next中的属性动画，并提供一些基本概念和示例代码。</p><h3 id="可以实现动画的属性-1" tabindex="-1">可以实现动画的属性 <a class="header-anchor" href="#可以实现动画的属性-1" aria-label="Permalink to &quot;可以实现动画的属性&quot;">​</a></h3><p>可以实现动画效果的属性包括但不限于：</p><ul><li>布局属性（位置、大小等）</li><li>仿射变换（平移、旋转等）</li><li>背景（颜色、模糊等）</li><li>内容（文字大小、颜色等）</li><li>前景（颜色等）</li><li>Overlay属性</li><li>外观（透明度、圆角等）</li></ul><p>这些属性之所以能实现动画，是因为它们存在中间状态。</p><h3 id="属性动画-animation-1" tabindex="-1">属性动画 <code>animation</code> <a class="header-anchor" href="#属性动画-animation-1" aria-label="Permalink to &quot;属性动画 `animation`&quot;">​</a></h3><p>属性动画是最简单的动画实现方式之一。它通过改变UI元素的属性值来实现动画效果。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>在<code>animation</code>之上的样式属性会有动画效果。</li><li>在<code>animation</code>之下的样式属性不会有动画效果。</li></ul><h3 id="属性动画-animation-参数-1" tabindex="-1">属性动画 <code>animation</code> 参数 <a class="header-anchor" href="#属性动画-animation-参数-1" aria-label="Permalink to &quot;属性动画 `animation` 参数&quot;">​</a></h3><p>属性动画可以通过不同的参数来调整动画的执行过程，包括：</p><ul><li><code>duration</code>（动画持续时间）</li><li><code>tempo</code>（动画速度）</li><li><code>curve</code>（动画曲线）</li><li><code>delay</code>（延迟时间）</li><li><code>iterations</code>（动画重复次数）</li><li><code>playMode</code>（动画播放模式）</li><li><code>onFinish</code>（动画完成后的回调）</li></ul><p>每个参数都有具体的含义和用途，可以根据需要灵活调整动画效果。</p>',100)]))}const P=a(C,[["render",B]]);export{D as __pageData,P as default};
