import{_ as s,c as e,a5 as r,o as t}from"./chunks/framework.DoP1wijR.js";const o="/pub-blog/assets/image-20250105215428087.Bn3x-9aF.png",p="/pub-blog/assets/image-20250105215450332.BHZUlxgJ.png",i="/pub-blog/assets/image-20250105215510702.B0A4xqZX.png",l="/pub-blog/assets/809751228.07WsbXI3.jpg",n="/pub-blog/assets/image-20250105220257474.Ezx37Pp1.png",g="/pub-blog/assets/image-20250105220425473.AVTBiGLb.png",c="/pub-blog/assets/image-20250105220833428.BvK3nCNX.png",d="/pub-blog/assets/image-20250105220935126.b4twionm.png",m="/pub-blog/assets/image-20250105221028989.CXXbt4yR.png",h="/pub-blog/assets/image-20250105221118340.SLWPSeub.png",b="/pub-blog/assets/image-20250105221414179.DWekNeOY.png",_="/pub-blog/assets/image-20250105221436893.DoZ7VpHF.png",u="/pub-blog/assets/image-20250105221540729.ZAA2Mnei.png",A="/pub-blog/assets/image-20250105221558679.B-TJDrtH.png",P=JSON.parse('{"title":"3 分钟教你使用 MarsCode AI 生成在线图表","description":"","frontmatter":{},"headers":[],"relativePath":"前端技能/3分钟教你使用MarsCode AI 生成在线图表/3分钟教你使用MarsCode AI 生成在线图表.md","filePath":"前端技能/3分钟教你使用MarsCode AI 生成在线图表/3分钟教你使用MarsCode AI 生成在线图表.md","lastUpdated":1739493302000}'),C={name:"前端技能/3分钟教你使用MarsCode AI 生成在线图表/3分钟教你使用MarsCode AI 生成在线图表.md"};function I(f,a,k,M,q,x){return t(),e("div",null,a[0]||(a[0]=[r('<h1 id="_3-分钟教你使用-marscode-ai-生成在线图表" tabindex="-1">3 分钟教你使用 MarsCode AI 生成在线图表 <a class="header-anchor" href="#_3-分钟教你使用-marscode-ai-生成在线图表" aria-label="Permalink to &quot;3 分钟教你使用 MarsCode AI 生成在线图表&quot;">​</a></h1><h2 id="需求" tabindex="-1">需求 <a class="header-anchor" href="#需求" aria-label="Permalink to &quot;需求&quot;">​</a></h2><p>对于前端开发者来讲，应该必不可少的会碰到开发在线图表的需求。国内开发者要开发在线图表应该都绕不过<a href="https://echarts.apache.org/zh/index.html" target="_blank" rel="noreferrer">echarts</a></p><p>对于很多刚上手 echart 的小伙伴来说，查阅配置文档是一个很痛苦的事情。</p><h2 id="上手-echarts" tabindex="-1">上手 echarts <a class="header-anchor" href="#上手-echarts" aria-label="Permalink to &quot;上手 echarts&quot;">​</a></h2><p>一般上手 echarts 的步骤如下</p><ol><li><p><a href="https://echarts.apache.org/handbook/zh/get-started/" target="_blank" rel="noreferrer">查看快速上手教程</a></p><p><img src="'+o+'" alt="image-20250105215428087"></p></li><li><p><a href="https://echarts.apache.org/handbook/zh/get-started/" target="_blank" rel="noreferrer">查阅示例，选择想要的图表</a></p><p><img src="'+p+'" alt="image-20250105215450332"></p></li><li><p><a href="https://echarts.apache.org/zh/option.html" target="_blank" rel="noreferrer">根据实际需求，查阅配置项，进行微调</a></p><p><img src="'+i+'" alt="image-20250105215510702"></p></li><li><p>各种尝试代码，验证结果</p><p><img src="'+l+'" alt="img"></p></li></ol><h2 id="marscode-ai-介绍" tabindex="-1">MarsCode AI 介绍 <a class="header-anchor" href="#marscode-ai-介绍" aria-label="Permalink to &quot;MarsCode AI 介绍&quot;">​</a></h2><p>MarsCode AI 是豆包旗下的智能编程助手，提供以智能代码补全为代表的核心能力，支持主流编程语言及 IDE，能在编码过程中提供单</p><p>行或整个函数的建议，同时支持在用户编码过程中提供代码解释、单测生成、问题修复、技术问答等辅助功能，提升编码效率与质量。</p><p>当前 MarsCode AI 提供了以下功能：</p><ol><li>代码补全 Code Completion</li><li>代码解释 Code Explain</li><li>单测生成 Unit Test Generation</li><li>注释生成 Generate documentation</li><li>智能修复 AI Fix</li><li>智能问答 AI Q&amp;A</li><li><strong>智能问答 AI Q&amp;A 一键 Apply AI 生成的代码变更至项目对应的文件位置并形成 Diff</strong></li></ol><p>当前要体验的便是 <strong>一键 Apply AI 生成的代码变更至项目对应的文件位置并形成 Diff</strong> 功能。</p><blockquote><p>当前该功能该功能目前仅支持 VSCode（需升级至 <strong>1.1.42</strong> 版本）</p></blockquote><h2 id="vs-code-安装-marscode-ai" tabindex="-1">vs code 安装 MarsCode AI <a class="header-anchor" href="#vs-code-安装-marscode-ai" aria-label="Permalink to &quot;vs code 安装 MarsCode AI&quot;">​</a></h2><p>首次安装</p><ol><li>打开 vscode 左侧的插件列表</li><li>搜索关键字 <strong>MarsCode AI</strong></li><li>点击安装</li></ol><p><img src="'+n+'" alt="image-20250105220257474"></p><ol start="4"><li><p>首次安装成功后，使用的话需要登录</p></li><li><p>然后，在 vscode 的左侧便可以看到 ai 助手</p><p><img src="'+g+`" alt="image-20250105220425473"></p></li></ol><h2 id="marscode-ai-生成代码并且应用" tabindex="-1">MarsCode AI 生成代码并且应用 <a class="header-anchor" href="#marscode-ai-生成代码并且应用" aria-label="Permalink to &quot;MarsCode AI 生成代码并且应用&quot;">​</a></h2><ol><li><p>使用 vscode 打开你的工程目录，我这里是空的文件夹</p></li><li><p>然后进行对话，输入你的需求</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>请根据2011-2024年中国程序员的数量，使用echarts把数据渲染出来。需求如下：</span></span>
<span class="line"><span>1. 所有的代码都写入到一个html文件中</span></span>
<span class="line"><span>2. 一个文件中 ，请使用不同的图表如柱状图、饼图和折线图显示出来数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>此时 **MarsCode AI ** 便开始生成代码</p><p><img src="`+c+'" alt="image-20250105220833428"></p></li><li><p>这个时候，可以点击 右上角的 <strong>Apply</strong> 按钮，便可以把当前代码应用到对应的文件上，如果该文件还没有创建，那么便会自动的创建</p><p><img src="'+d+'" alt="image-20250105220935126"></p></li><li><p>这里，你可以根据需求，点击 <strong>全部采纳</strong> 或者<strong>部分采纳</strong></p><blockquote><p>​ 我们点击 <strong>全部采纳</strong></p></blockquote><p><img src="'+m+'" alt="image-20250105221028989"></p></li><li><p>实际效果</p><p><img src="'+h+'" alt="image-20250105221118340"></p></li></ol><h2 id="继续调整" tabindex="-1">继续调整 <a class="header-anchor" href="#继续调整" aria-label="Permalink to &quot;继续调整&quot;">​</a></h2><p>可以看到，<strong>MarsCode AI</strong> 基本实现了我们的需求，这个时候发现部分效果不合适</p><ol><li>文字遮挡了</li><li>希望图片水平排列</li></ol><p>我们继续对话让它进行调整</p><p><img src="'+b+'" alt="image-20250105221414179"></p><hr><p>再次点击 <strong>Apply</strong></p><p><img src="'+_+'" alt="image-20250105221436893"></p><hr><p>此时，你可以根据需求 点击 <strong>全部采纳</strong> 或者 <strong>采纳</strong></p><p><img src="'+u+'" alt="image-20250105221540729"></p><p>得到效果</p><p><img src="'+A+'" alt="image-20250105221558679"></p><hr><p>但是我们发现，第一个柱状图还是出现了文字遮挡，这里继续对话调整即可</p><hr><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>经过简单的小案例，我们发现豆包的交互还是比较智能的，包括 ui 的设计，对话的便利性</p><p>但是也存在缺点，如生成代码时反应慢、没有提供批量编辑或者创建文件的功能。代码质量也有待提升</p><p><strong>“本文正在参加豆包 MarsCode</strong> <strong>AI</strong> <strong>编程体验家活动”</strong></p>',41)]))}const B=s(C,[["render",I]]);export{P as __pageData,B as default};
