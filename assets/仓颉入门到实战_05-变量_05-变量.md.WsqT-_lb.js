import{_ as s,c as e,a5 as n,o as i}from"./chunks/framework.DoP1wijR.js";const h=JSON.parse('{"title":"05-变量","description":"","frontmatter":{},"headers":[],"relativePath":"仓颉入门到实战/05-变量/05-变量.md","filePath":"仓颉入门到实战/05-变量/05-变量.md","lastUpdated":1736300415000}'),p={name:"仓颉入门到实战/05-变量/05-变量.md"};function l(t,a,r,o,d,c){return i(),e("div",null,a[0]||(a[0]=[n(`<h1 id="_05-变量" tabindex="-1">05-变量 <a class="header-anchor" href="#_05-变量" aria-label="Permalink to &quot;05-变量&quot;">​</a></h1><h2 id="什么是变量" tabindex="-1">什么是变量 <a class="header-anchor" href="#什么是变量" aria-label="Permalink to &quot;什么是变量&quot;">​</a></h2><p>在计算机编程的复杂体系中，变量可被精准地定义为计算机内存里专门用于存储数据的特定空间区域。当我们着手进行程序设计时，无论</p><p>是开发一款功能精巧的闹钟应用，还是构建一个便捷高效的购物车系统，变量都扮演着不可或缺的角色。在闹钟程序里，为了精确记录和</p><p>显示时间信息，需要相应的变量来存储时间数据，这些数据会随着时间的推移而不断更新，从而确保闹钟能够准确地执行其定时提醒功</p><p>能。同样地，在购物车程序中，变量则用于存储各类购物数据，包括商品的名称、数量、价格等详细信息，这些数据的动态变化反映了用</p><p>户的购物行为和购物车的实时状态，是实现购物车功能的基础支撑。</p><h2 id="变量的特点" tabindex="-1">变量的特点 <a class="header-anchor" href="#变量的特点" aria-label="Permalink to &quot;变量的特点&quot;">​</a></h2><p>在仓颉语言中，变量具备以下特点：</p><ol><li>变量的名称需要是一个合法的标记符</li><li>变量也有类型，如数字、文本等类型。</li><li>变量在使用时，需要初始化/赋值。也就是程序不能访问一块闲置的内存</li><li>变量分为可变和不可变。</li></ol><h2 id="变量的名称需要是一个合法的标记符" tabindex="-1">变量的名称需要是一个合法的标记符 <a class="header-anchor" href="#变量的名称需要是一个合法的标记符" aria-label="Permalink to &quot;变量的名称需要是一个合法的标记符&quot;">​</a></h2><p><strong>正例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 创建一个变量  文本类型 =&gt; 字符串类型</span></span>
<span class="line"><span>let userName = &quot;小万&quot; // 变量名称为  userName  存储的内容是 &quot;小万&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>反例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let 123userName = &quot;小万&quot; //  不能以数字开头</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="变量也有类型-如数字、文本等类型" tabindex="-1">变量也有类型，如数字、文本等类型 <a class="header-anchor" href="#变量也有类型-如数字、文本等类型" aria-label="Permalink to &quot;变量也有类型，如数字、文本等类型&quot;">​</a></h2><p><strong>正例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 创建一个变量  数字类型</span></span>
<span class="line"><span>let num = 100 // 变量名称为 num 存储的内容是 数字 100</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="变量在使用时-需要初始化-赋值" tabindex="-1">变量在使用时，需要初始化/赋值 <a class="header-anchor" href="#变量在使用时-需要初始化-赋值" aria-label="Permalink to &quot;变量在使用时，需要初始化/赋值&quot;">​</a></h2><p>也就是程序不能访问一块闲置的内存</p><p><strong>正例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// 先创建 再使用</span></span>
<span class="line"><span>let age = 300 // 创建变量</span></span>
<span class="line"><span>print(age) // 使用变量</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>反例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>print(address) // address 从来没有声明过</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="变量分为可变和不可变" tabindex="-1">变量分为可变和不可变 <a class="header-anchor" href="#变量分为可变和不可变" aria-label="Permalink to &quot;变量分为可变和不可变&quot;">​</a></h2><ol><li>不可变的变量需要使用关键字 <strong>let</strong></li><li>可变的变量需要使用关键字 <strong>var</strong></li></ol><p><strong>正例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>var age = 20</span></span>
<span class="line"><span>age = 30 // 可变</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>反例</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>let age = 20</span></span>
<span class="line"><span>age = 30 // 不可变</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,30)]))}const b=s(p,[["render",l]]);export{h as __pageData,b as default};
