import{_ as e,c as p,j as i,a,G as l,a2 as t,B as o,o as r}from"./chunks/framework.Y1dwPOgg.js";const d="/pub-blog/assets/image-20240531235823670.ByOADPO8.png",h="/pub-blog/assets/image-20240531230947783.OsZsv1zP.png",k="/pub-blog/assets/image-20240531231710994.CCdtYwrZ.png",g="/pub-blog/assets/image-20240531231342832.Dzod0uwR.png",E="/pub-blog/assets/image-20240531232324089.KVAr_qXu.png",m="/pub-blog/assets/image-20240531232826263.N86_Wsoq.png",u="/pub-blog/assets/image-20240531233143803.UW6gCpf4.png",b="/pub-blog/assets/image-20240531233422423.CjYMyzUy.png",y="/pub-blog/assets/image-20240531233719248.CtFMixfR.png",F="/pub-blog/assets/image-20240531234536893.BkMh6b4s.png",R=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙开发技巧/鸿蒙编辑器调试技巧/鸿蒙编辑器调试技巧.md","filePath":"鸿蒙开发技巧/鸿蒙编辑器调试技巧/鸿蒙编辑器调试技巧.md","lastUpdated":1733887539000}'),C={name:"鸿蒙开发技巧/鸿蒙编辑器调试技巧/鸿蒙编辑器调试技巧.md"},f={id:"最新-huawei-deveco-studio-调试技巧",tabindex:"-1"},v={class:"header-anchor",href:"#最新-huawei-deveco-studio-调试技巧","aria-label":'Permalink to "最新 HUAWEI DevEco Studio 调试技巧"'},c={id:"前言",tabindex:"-1"},B={class:"header-anchor",href:"#前言","aria-label":'Permalink to "前言"'},A={id:"肉眼调试法",tabindex:"-1"},D={class:"header-anchor",href:"#肉眼调试法","aria-label":'Permalink to "肉眼调试法"'},x={id:"注释排错调试法",tabindex:"-1"},P={class:"header-anchor",href:"#注释排错调试法","aria-label":'Permalink to "注释排错调试法"'},_={id:"控制台输出法",tabindex:"-1"},w={class:"header-anchor",href:"#控制台输出法","aria-label":'Permalink to "控制台输出法"'},S={id:"try-catch",tabindex:"-1"},q={class:"header-anchor",href:"#try-catch","aria-label":'Permalink to "try-catch"'},U={id:"弹出提示法",tabindex:"-1"},N={class:"header-anchor",href:"#弹出提示法","aria-label":'Permalink to "弹出提示法"'},W={id:"断点调试法",tabindex:"-1"},H={class:"header-anchor",href:"#断点调试法","aria-label":'Permalink to "断点调试法"'},I={id:"结束",tabindex:"-1"},O={class:"header-anchor",href:"#结束","aria-label":'Permalink to "结束"'};function V(j,s,$,z,M,T){const n=o("CustomComponent");return r(),p("div",null,[i("h2",f,[s[1]||(s[1]=a("最新 HUAWEI DevEco Studio 调试技巧 ")),i("a",v,[s[0]||(s[0]=a("​ ")),l(n)])]),i("h2",c,[s[3]||(s[3]=a("前言 ")),i("a",B,[s[2]||(s[2]=a("​ ")),l(n)])]),s[18]||(s[18]=t('<p><img src="'+d+'" alt="image-20240531235823670"></p><p>在我们使用 <strong>HUAWEI DevEco Studio</strong> 编辑器开发鸿蒙应用时，免不了要对我们的应用程序进行代码调试。我们根据实际情况，一般会用到以下几种方式进行代码调试。</p><ol><li>肉眼调试法</li><li>注释排错调试法</li><li>try-catch</li><li>控制台输出法</li><li>弹出提示法</li><li><strong>断点调试法</strong></li></ol>',3)),i("h2",A,[s[5]||(s[5]=a("肉眼调试法 ")),i("a",D,[s[4]||(s[4]=a("​ ")),l(n)])]),s[19]||(s[19]=i("p",null,[i("strong",null,"肉眼调试法"),a("也称为"),i("strong",null,"随缘调试法"),a("，一般适用于编辑器有明显错误、或者是刚写完的小段代码中，明显依赖自己的"),i("strong",null,"钛合金狗眼"),a("。当你刚刚写好的一两行代码，运行发现出错时，就可以直接肉眼排错。如")],-1)),s[20]||(s[20]=i("p",null,[i("img",{src:h,alt:"image-20240531230947783"})],-1)),s[21]||(s[21]=i("p",null,[i("strong",null,"肉眼调试法"),a(" 也有很明显的弊端，如果是调试大段程序、或者调试别人的程序。那么此法就不可行了。如：")],-1)),s[22]||(s[22]=i("p",null,[i("img",{src:k,alt:"image-20240531231710994"})],-1)),i("h2",x,[s[7]||(s[7]=a("注释排错调试法 ")),i("a",P,[s[6]||(s[6]=a("​ ")),l(n)])]),s[23]||(s[23]=i("p",null,[i("strong",null,"注释排错调试法"),a("一般适用于没有明显的错误，自我感觉莫名其妙导致就出错的情况。如"),i("strong",null,"代码昨天运行的时候还是好好，今天过来突然就不行了"),a("。这个时候，可以大胆的根据代码流程来锁定可能出错的范围，将它注视掉。如果此时程序没有出错，那么就表示锁定出错的范围了。然后继续不断注释其他的，继续缩小范围，继续找到出错的可疑的代码，再进行调错。")],-1)),s[24]||(s[24]=i("p",null,[i("img",{src:g,alt:"image-20240531231342832"})],-1)),i("h2",_,[s[9]||(s[9]=a("控制台输出法 ")),i("a",w,[s[8]||(s[8]=a("​ ")),l(n)])]),s[25]||(s[25]=t('<p><strong>控制台输出法</strong>，是程序员最拿手的调试法。直接在控制台中输出自己想要查看的数据，便捷快速。</p><p><img src="'+E+'" alt="image-20240531232324089"></p><p>但是在 <strong>HUAWEI DevEco Studio</strong>中。控制台的输入也有弊端：</p><ol><li><code>console.log</code>的第一个参数必须时字符串</li><li>无法有效的输出对象类型的数据。</li></ol><p><img src="'+m+'" alt="image-20240531232826263"></p><p>因此对于对象类型的数据，一般可以通过序列化后再输出</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;二师兄&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pug))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>**Tips：**如果是对象数组，可以使用 <code>console.table</code> 来友好的进行输出</p><p><img src="'+u+'" alt="image-20240531233143803"></p>',9)),i("h2",S,[s[11]||(s[11]=a("try-catch ")),i("a",q,[s[10]||(s[10]=a("​ ")),l(n)])]),s[26]||(s[26]=t(`<p>另外有一些程序可能在运行的时候会导致程序成直接崩溃，也没有太多错误提示，这个时候我们可以使用 try-catch 来捕获和输出错误</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onPageShow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;成功输出&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, a)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;错误信息&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e.message, e.code)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,2)),i("h2",U,[s[13]||(s[13]=a("弹出提示法 ")),i("a",N,[s[12]||(s[12]=a("​ ")),l(n)])]),s[27]||(s[27]=i("p",null,[a("进行真机调试时，可以直接利用 "),i("code",null,"harmonyos"),a("中提供的弹出窗口的方式 进行输出想要查看的数据")],-1)),s[28]||(s[28]=i("ol",null,[i("li",null,[i("code",null,'promptAction.showToast({ message: "黎猴呀" })')]),i("li",null,[i("code",null,'AlertDialog.show({ message: "执返剂" })')])],-1)),s[29]||(s[29]=i("p",null,[i("img",{src:b,alt:"image-20240531233422423"})],-1)),s[30]||(s[30]=i("hr",null,null,-1)),s[31]||(s[31]=i("p",null,[i("img",{src:y,alt:"image-20240531233719248"})],-1)),i("h2",W,[s[15]||(s[15]=a("断点调试法 ")),i("a",H,[s[14]||(s[14]=a("​ ")),l(n)])]),s[32]||(s[32]=i("p",null,[a("如果上述的方案都解决不了你调试bug的需求，那么最后一种你就一定要拿捏住。 该方式主要是利用了 "),i("strong",null,"HUAWEI DevEco Studio"),a("种提供的断点调试方式来进行。")],-1)),s[33]||(s[33]=i("p",null,[i("img",{src:F,alt:"image-20240531234536893"})],-1)),i("h2",I,[s[17]||(s[17]=a("结束 ")),i("a",O,[s[16]||(s[16]=a("​ ")),l(n)])]),s[34]||(s[34]=t('<p>如果可以帮助到你，欢迎来撩</p><ol><li>邮箱 <code>yeah126139163@163.com</code></li><li>微信 <code>w846903522</code></li><li><a href="https://juejin.cn/user/4441682708283191" target="_blank" rel="noreferrer">掘金</a></li><li><a href="https://space.bilibili.com/414874315?spm_id_from=333.1007.0.0" target="_blank" rel="noreferrer">b站</a></li><li>公众号 <code>程序员漫谈</code></li></ol>',2))])}const Y=e(C,[["render",V]]);export{R as __pageData,Y as default};
