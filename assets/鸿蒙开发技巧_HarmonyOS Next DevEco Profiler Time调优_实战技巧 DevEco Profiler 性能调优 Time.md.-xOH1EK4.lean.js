import{_ as t,c as e,j as i,a,G as l,a2 as p,B as h,o as k}from"./chunks/framework.Y1dwPOgg.js";const r="/pub-blog/assets/PixPin_2024-11-19_23-45-42.CVGEFglg.gif",E="/pub-blog/assets/image-20241119235346173.BTi0U0b8.png",d="/pub-blog/assets/image-20241119235643530.DJyAaRQo.png",g="/pub-blog/assets/image-20241119235903928.Ca8cWZM_.png",o="/pub-blog/assets/image-20241120000051504.BsWG63Ws.png",b="/pub-blog/assets/PixPin_2024-11-20_00-08-45.D_mw9xcw.gif",y="/pub-blog/assets/image-20241120001739740.Bs7cL3ke.png",m="/pub-blog/assets/image-20241120001849449.B9VHTov2.png",u="/pub-blog/assets/image-20241120002136473.kkpYBGB7.png",c="/pub-blog/assets/PixPin_2024-11-20_00-24-52.uaRHnh0J.gif",F="/pub-blog/assets/PixPin_2024-11-20_00-30-56.BL3ovHpN.gif",C="/pub-blog/assets/image-20241120003154861.ib5ibPsV.png",as=JSON.parse('{"title":"实战技巧 DevEco Profiler 性能调优 Time","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙开发技巧/HarmonyOS Next DevEco Profiler Time调优/实战技巧 DevEco Profiler 性能调优 Time.md","filePath":"鸿蒙开发技巧/HarmonyOS Next DevEco Profiler Time调优/实战技巧 DevEco Profiler 性能调优 Time.md","lastUpdated":1733887539000}'),B={name:"鸿蒙开发技巧/HarmonyOS Next DevEco Profiler Time调优/实战技巧 DevEco Profiler 性能调优 Time.md"},f={id:"实战技巧-deveco-profiler-性能调优-time",tabindex:"-1"},T={class:"header-anchor",href:"#实战技巧-deveco-profiler-性能调优-time","aria-label":'Permalink to "实战技巧 DevEco Profiler 性能调优 Time"'},P={id:"背景",tabindex:"-1"},v={class:"header-anchor",href:"#背景","aria-label":'Permalink to "背景"'},A={id:"time",tabindex:"-1"},q={class:"header-anchor",href:"#time","aria-label":'Permalink to "Time"'},x={id:"调试素材",tabindex:"-1"},D={class:"header-anchor",href:"#调试素材","aria-label":'Permalink to "调试素材"'},_={id:"设置函数名称",tabindex:"-1"},w={class:"header-anchor",href:"#设置函数名称","aria-label":'Permalink to "设置函数名称"'},N={id:"选择应用和进程",tabindex:"-1"},S={class:"header-anchor",href:"#选择应用和进程","aria-label":'Permalink to "选择应用和进程"'},M={id:"开始跟踪-定位耗时任务",tabindex:"-1"},I={class:"header-anchor",href:"#开始跟踪-定位耗时任务","aria-label":'Permalink to "开始跟踪，定位耗时任务"'},U={id:"time面板介绍",tabindex:"-1"},H={class:"header-anchor",href:"#time面板介绍","aria-label":'Permalink to "Time面板介绍"'},V={id:"arkts-callstack",tabindex:"-1"},O={class:"header-anchor",href:"#arkts-callstack","aria-label":'Permalink to "ArkTS Callstack"'},j={id:"user-trace",tabindex:"-1"},W={class:"header-anchor",href:"#user-trace","aria-label":'Permalink to "User Trace"'},G={id:"调试素材-1",tabindex:"-1"},J={class:"header-anchor",href:"#调试素材-1","aria-label":'Permalink to "调试素材"'},L={id:"分析",tabindex:"-1"},$={class:"header-anchor",href:"#分析","aria-label":'Permalink to "分析"'},R={id:"总结",tabindex:"-1"},K={class:"header-anchor",href:"#总结","aria-label":'Permalink to "总结"'};function Q(Y,s,Z,z,X,ss){const n=h("CustomComponent");return k(),e("div",null,[i("h1",f,[s[1]||(s[1]=a("实战技巧 DevEco Profiler 性能调优 Time ")),i("a",T,[s[0]||(s[0]=a("​ ")),l(n)])]),i("h1",P,[s[3]||(s[3]=a("背景 ")),i("a",v,[s[2]||(s[2]=a("​ ")),l(n)])]),s[26]||(s[26]=p('<p>DevEco Studio 开发工具中提供了 Profiler 面板，可以让我们在针对实际开发应用过程中碰到的一些性能相关的问题提供解决方案。如响应速度慢、动画卡顿、内存泄漏、发热、耗电快等等场景。其中 Profiler 提供了实时监控、深度录制等监控过程的功能。从分析的角度入手，主要有以下几个纬度进行分析：</p><table tabindex="0"><thead><tr><th>场景</th><th>面板</th></tr></thead><tbody><tr><td>基础耗时分析</td><td>Time</td></tr><tr><td>基础内存分析</td><td>Allocation</td></tr><tr><td>内存泄露分析</td><td>Snapshot</td></tr><tr><td>CPU活动分析</td><td>CPU</td></tr><tr><td>冷启动分析</td><td>Launch</td></tr><tr><td>并行并发分析</td><td>Concurrency</td></tr><tr><td>加载丢帧分析</td><td>ArkWeb</td></tr><tr><td>网络诊断</td><td>Network</td></tr></tbody></table><p><img src="'+r+'" alt="PixPin_2024-11-19_23-45-42"></p><p>不过需要注意的是Profiler只能配合真机来使用，模拟器暂时不支持。</p>',4)),i("h1",A,[s[5]||(s[5]=a("Time ")),i("a",q,[s[4]||(s[4]=a("​ ")),l(n)])]),s[27]||(s[27]=i("p",null,"Time面板常见的需求是对应用中的函数耗时进行分析。函数作为应用开发基本的基石，一般常见的耗时工作都是放在函数中进行的。",-1)),s[28]||(s[28]=i("p",null,"Time可以对同步函数和异步函数进行分析。还提供了很方便的一键跳转到源码的功能，给开发者调试代码提供了很高效率的保证。",-1)),i("h1",x,[s[7]||(s[7]=a("调试素材 ")),i("a",D,[s[6]||(s[6]=a("​ ")),l(n)])]),s[29]||(s[29]=p('<p>为了方便调试，我们提供了以下素材。</p><p><img src="'+E+`" alt="image-20241119235346173"></p><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { promptAction } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.ArkUI&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fn1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fn2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fn3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  fn4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    promptAction.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showToast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`快速任务结束\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;快速任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fn1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">justifyContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlexAlign.Center)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div>`,3)),i("h1",_,[s[9]||(s[9]=a("设置函数名称 ")),i("a",w,[s[8]||(s[8]=a("​ ")),l(n)])]),s[30]||(s[30]=p(`<p>在模块的build-profile.json5中添加以下配置，否则采集到的函数可能都是匿名函数</p><blockquote><p>entry/build-profile.json5 中 设置 strip 为false</p></blockquote><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;apiType&quot;: &quot;stageMode&quot;,</span></span>
<span class="line"><span>  &quot;buildOption&quot;: {</span></span>
<span class="line"><span>    &quot;nativeLib&quot;: {</span></span>
<span class="line"><span>      &quot;debugSymbol&quot;: {</span></span>
<span class="line"><span>        &quot;strip&quot;: false</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,3)),i("h1",N,[s[11]||(s[11]=a("选择应用和进程 ")),i("a",S,[s[10]||(s[10]=a("​ ")),l(n)])]),s[31]||(s[31]=i("p",null,"点击菜单中的Profiler，然后选择对应的设备和应用，进程会自动选中的。",-1)),s[32]||(s[32]=i("p",null,[i("img",{src:d,alt:"image-20241119235643530"})],-1)),s[33]||(s[33]=i("p",null,"然后选中Time菜单",-1)),s[34]||(s[34]=i("p",null,[i("img",{src:g,alt:"image-20241119235903928"})],-1)),i("h1",M,[s[13]||(s[13]=a("开始跟踪，定位耗时任务 ")),i("a",I,[s[12]||(s[12]=a("​ ")),l(n)])]),s[35]||(s[35]=i("ol",null,[i("li",null,[i("p",null,"一切准备就绪后，点击创建 Session")]),i("li",null,[i("p",null,"然后点击 按钮开始录制"),i("p",null,[i("img",{src:o,alt:"image-20241120000051504"})])]),i("li",null,[i("p",null,"在录制过程中，开始使用你的应用来重现问题。操作完毕后，记得点击结束。完成这次流程的录制。"),i("p",null,[i("img",{src:b,alt:"PixPin_2024-11-20_00-08-45"})])])],-1)),i("h1",U,[s[15]||(s[15]=a("Time面板介绍 ")),i("a",H,[s[14]||(s[14]=a("​ ")),l(n)])]),s[36]||(s[36]=i("p",null,"在点击结束录制后，便能看到这个画面",-1)),s[37]||(s[37]=i("p",null,[i("img",{src:y,alt:"image-20241120001739740"})],-1)),i("h1",V,[s[17]||(s[17]=a("ArkTS Callstack ")),i("a",O,[s[16]||(s[16]=a("​ ")),l(n)])]),s[38]||(s[38]=p('<p>方舟运行时函数调用泳道，基于时间轴展示CPU使用率和虚拟机的执行状态，以及当前调用栈名称和调用类型。由于隐私安全政策，已上架应用市场的应用不支持录制此泳道。</p><p>调用栈分类从语言层面分为ArkTS、NAPI以及Native，从归属层面分为开发者代码以及系统代码。从这两个方面可以将调用栈类型归类如下：</p><ul><li><p>ArkTS：程序正在执行ArkTS代码；</p></li><li><p>NAPI：程序正在运行的NAPI代码；</p></li><li><p>Native：程序正在执行的Native代码；</p><p>其中每一个类型的<strong>亮色</strong>和<strong>灰色</strong>分别代表开发者和系统的代码。</p></li></ul><p><img src="'+m+'" alt="image-20241120001849449"></p><ol><li><p>ArkTs Callstack 包含有开发者自己写的代码。点击它，会在下方显示详情面板</p></li><li><p>Weight表示函数的总耗时，Self表示函数自身的耗时。如</p><p><img src="'+u+'" alt="image-20241120002136473"></p></li><li><p><strong>Heaviest Stack</strong> 表示是<strong>Details</strong>区域选择节点所处的耗时最长的完整调用栈</p></li><li><p>绿色部分表示开发者自己编写的代码，可以看见右侧还有对应的 fn1、fn2、fn3 等等。通过这个函数调用栈便可获知哪个函数比较行耗时了</p></li><li><p>此时，如果想要快速定位到源码，双击函数即可</p><p><img src="'+c+'" alt="PixPin_2024-11-20_00-24-52"></p></li></ol>',5)),i("h1",j,[s[19]||(s[19]=a("User Trace ")),i("a",W,[s[18]||(s[18]=a("​ ")),l(n)])]),s[39]||(s[39]=p('<p>Time面板一般直接用来分析同步代码，如果想要分析和定位异步代码，建议搭配 hiTraceMeter接口配套User Trace使用</p><p>hiTraceMeter接口</p><table tabindex="0"><thead><tr><th>接口名</th><th>描述</th></tr></thead><tbody><tr><td>hiTraceMeter.startTrace(name: string, taskId: number)</td><td>异步时间片跟踪接口，标记一个预跟踪耗时任务的开始。taskId是trace中用来表示关联的ID,如果有多个name相同的任务并行执行，则每次调用startTrace的taskId不同；如果具有相同name的任务是串行执行的，则taskId可以相同。</td></tr><tr><td>hiTraceMeter.finishTrace(name: string, taskId: number)</td><td>异步时间片跟踪接口，name和taskId必须与流程开始的hiTraceMeter.startTrace对应参数值保持一致。</td></tr></tbody></table>',3)),i("h1",G,[s[21]||(s[21]=a("调试素材 ")),i("a",J,[s[20]||(s[20]=a("​ ")),l(n)])]),s[40]||(s[40]=p(`<div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { hiTraceMeter } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@kit.PerformanceAnalysisKit&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Entry</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">struct Index {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n: number) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> promise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> promise</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finishTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finishTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  async </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hiTraceMeter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finishTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;异步长时任务&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onClick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asyncCb1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          AlertDialog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ message: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;结束&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">justifyContent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FlexAlign.Center)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><hr><p><img src="`+F+'" alt="PixPin_2024-11-20_00-30-56"></p>',3)),i("h1",L,[s[23]||(s[23]=a("分析 ")),i("a",$,[s[22]||(s[22]=a("​ ")),l(n)])]),s[41]||(s[41]=i("p",null,[i("img",{src:C,alt:"image-20241120003154861"})],-1)),s[42]||(s[42]=i("ol",null,[i("li",null,"展开 User Trace"),i("li",null,"可以看见 User Trace泳道上存在粉色的3个异步任务"),i("li",null,"点击以上随便一个，可以在detail中看见这个函数的具体耗时")],-1)),i("h1",R,[s[25]||(s[25]=a("总结 ")),i("a",K,[s[24]||(s[24]=a("​ ")),l(n)])]),s[43]||(s[43]=i("p",null,"开发应用或服务过程中，如果遇到卡顿、加载耗时等性能问题，开发者通常会关注相关函数执行的耗时情况。DevEco Profiler提供的Time场景分析任务，可在应用/服务运行时，展示热点区域内基于CPU和进程耗时分析的调用栈情况，并提供跳转至相关代码的能力，使开发者更便捷地进行代码优化。",-1))])}const ns=t(B,[["render",Q]]);export{as as __pageData,ns as default};
