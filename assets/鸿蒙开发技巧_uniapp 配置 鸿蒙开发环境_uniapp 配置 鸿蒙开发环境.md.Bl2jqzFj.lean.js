import{_ as r,c as a,a5 as e,o}from"./chunks/framework.DoP1wijR.js";const n="/pub-blog/assets/image-20241219073016202.Ck1SKD1n.png",l="/pub-blog/assets/image-20241219075439289.C9dLyHI4.png",p="/pub-blog/assets/image-20241219075800757.CwpgUeeZ.png",i="/pub-blog/assets/TurboModule.DvRTrtXH.png",f=JSON.parse('{"title":"uniapp 配置 鸿蒙开发环境","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙开发技巧/uniapp 配置 鸿蒙开发环境/uniapp 配置 鸿蒙开发环境.md","filePath":"鸿蒙开发技巧/uniapp 配置 鸿蒙开发环境/uniapp 配置 鸿蒙开发环境.md","lastUpdated":1735013403000}'),s={name:"鸿蒙开发技巧/uniapp 配置 鸿蒙开发环境/uniapp 配置 鸿蒙开发环境.md"};function u(c,t,g,h,d,m){return o(),a("div",null,t[0]||(t[0]=[e('<h1 id="uniapp-配置-鸿蒙开发环境" tabindex="-1">uniapp 配置 鸿蒙开发环境 <a class="header-anchor" href="#uniapp-配置-鸿蒙开发环境" aria-label="Permalink to &quot;uniapp 配置 鸿蒙开发环境&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>随着 HarmonyOS Next 的发布，国内的大前端中又增加了一名重量级的角色。目前想要开发出一款主流的覆盖所有移动端的产品的公</p><p>司，我们来看看它需要做出什么样的产品</p><p><img src="'+n+'" alt="image-20241219073016202"></p><p>从中我们可以看到，想到开发完一套完整的产品，多端发布的压力不容小觑。所以在企业在考虑兼容HarmonyOS Next 的时候需要考虑</p><p>资深的开发成本了。根据市场上已有的技术方案结合企业自身的需求，企业可以选择的不多：</p><ol><li>开发单个客户端</li><li>开发<strong>多端</strong></li><li>开发<strong>全端</strong></li></ol><p>开发单个客户端可以考虑使用原生或者是多端框架。</p><p>开发多端必须要考虑相关的框架了。如 React Native、Flutter、Uniapp、Taro等</p><p>开发全端能考虑的不多，基本就是Uniapp、和Taro。</p><p>但是考虑到目前 HarmonyOS Next 比较火热，所以下面的主题都是围绕它进行</p><h2 id="多端解决方案" tabindex="-1">多端解决方案 <a class="header-anchor" href="#多端解决方案" aria-label="Permalink to &quot;多端解决方案&quot;">​</a></h2><p>目前市场上对于多端开发的解决方案，我们看看都有哪一些：</p><ol><li><a href="https://www.react-native.cn/" target="_blank" rel="noreferrer">React Native</a> 推出的 <a href="https://gitee.com/openharmony-sig/ohos_react_native" target="_blank" rel="noreferrer">ohos_react_native</a></li><li><a href="https://docs.flutter.cn/" target="_blank" rel="noreferrer">flutter</a> 推出的 <a href="https://gitee.com/openharmony-sig/flutter_flutter" target="_blank" rel="noreferrer">flutter_flutter</a></li><li><a href="https://uniapp.dcloud.net.cn/tutorial/harmony/intro.html" target="_blank" rel="noreferrer">uniapp</a></li><li><a href="https://docs.taro.zone/en/docs/harmony/" target="_blank" rel="noreferrer">taro</a></li></ol><h2 id="react-native" tabindex="-1">React Native <a class="header-anchor" href="#react-native" aria-label="Permalink to &quot;React Native&quot;">​</a></h2><p><img src="'+l+'" alt="image-20241219075439289"></p><p>从上图可以看出，RN架构中在<strong>React Common</strong> 和 <strong>OS</strong> 之间加入了 OpenHarmony 适配层</p><blockquote><ul><li>React Common：所有平台通用的 CPP 代码，用于对 <strong>RN</strong> 侧传过来的数据进行预处理。</li><li>OS 代码：对接系统底层功能，根据适配层代码传过来的数据进行渲染，或完成对应的功能。</li></ul></blockquote><p>RN在进行鸿蒙化时，主要是使用了两个方案</p><ol><li>Fabric <strong>负责渲染</strong></li><li>TurboModule <strong>负责通信</strong></li></ol><p><strong>Fabric</strong> 是 React Native 的组件渲染系统。接收 React Native 传过来的组件信息，处理后发送给原生 OS，由 OS 完成页面的渲染。</p><p>此方案中，rn不能根据已有的代码编程成ArkUI对应的组件，而是利用了OpenHarmony 提供的ContentSlot接口，调用C-APi创建的组件。</p><p><img src="'+p+'" alt="image-20241219075800757"></p><p><strong>TurboModule</strong>是 React Native 中用于 JavaScript 和原生代码进行交互的模块。</p><p>根据是否依赖 OpenHarmony 系统相关的能力，可以分为两类： <strong>ArkTSTurboModule</strong>和<strong>cxxTurboModule</strong> 。</p><ol><li><strong>ArkTSTurboModule</strong>： <ul><li>ArkTSTurboModule 为 React Native 提供了<strong>调用 ArkTS 原生 API 的方法</strong>。可以分为同步与异步两种。</li><li>ArkTSTurboModule 依赖 <strong>NAPI</strong> 进行原生代码与 CPP 侧的通信。包括 JS 与 C 之间的类型转换，同步和异步调用的实现等。</li></ul></li><li><strong>cxxTurboModule</strong>： <ul><li>cxxTurboModule <strong>主要提供的是不需要系统参与的能力</strong>，例如<code>NativeAnimatedTurboModule</code> 主要提供了数据计算的相关能力。</li><li>cxxTurboModule 不依赖于系统的原生 <strong>API</strong>，为了提高相互通信的效率，一般是在 <strong>cpp</strong> 侧实现，这样可以减少 native 与 cpp 之间的通信次数，提高性能。</li></ul></li></ol><p><img src="'+i+'" alt="TurboModule"></p><h2 id="flutter" tabindex="-1">flutter <a class="header-anchor" href="#flutter" aria-label="Permalink to &quot;flutter&quot;">​</a></h2><p><a href="https://gitee.com/openharmony-sig/flutter_flutter" target="_blank" rel="noreferrer">flutter_flutter</a></p><p>目前是华为团队在维护fluttersdk，基于Flutter SDK对于OpenHarmony平台的兼容拓展，可支持IDE或者终端使用Flutter Tools指令编译</p><p>和构建OpenHarmony应用程序。</p><h2 id="uniapp" tabindex="-1">Uniapp <a class="header-anchor" href="#uniapp" aria-label="Permalink to &quot;Uniapp&quot;">​</a></h2><p>聊回到国内的uniapp，对于uniapp，一直是国内大前端的技术选型的领先者。</p><p>uniapp 也推出了针对鸿蒙的适配。</p><h2 id="taro" tabindex="-1">Taro <a class="header-anchor" href="#taro" aria-label="Permalink to &quot;Taro&quot;">​</a></h2>',36)]))}const _=r(s,[["render",u]]);export{f as __pageData,_ as default};
