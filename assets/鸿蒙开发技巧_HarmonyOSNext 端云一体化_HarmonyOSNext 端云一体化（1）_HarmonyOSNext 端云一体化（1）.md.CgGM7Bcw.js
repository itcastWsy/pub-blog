import{_ as t,c as o,a5 as e,o as i}from"./chunks/framework.DoP1wijR.js";const r="/pub-blog/assets/image-20250116090935066.CZlSKbVj.png",l="/pub-blog/assets/image-20250116091157505.y7idt2Tc.png",s="/pub-blog/assets/image-20250116091237635.BfchN-ML.png",n="/pub-blog/assets/image-20250116095501501.DWWc8uOv.png",p="/pub-blog/assets/image-20250116095523881.rpcEvgTA.png",c="/pub-blog/assets/image-20250116095646627.cOqWt548.png",d="/pub-blog/assets/image-20250116095730657.CAiM5x9D.png",g="/pub-blog/assets/image-20250116100212297.aTng-z_X.png",m="/pub-blog/assets/image-20250116100026310.C6vVrVhj.png",u="/pub-blog/assets/image-20250116100343797.DwgByfdy.png",h="/pub-blog/assets/image-20250116100642788.ClZyIeP7.png",b="/pub-blog/assets/image-20250116100701709.KELNsNfV.png",_="/pub-blog/assets/image-20250116100720676.Bs8NfMXq.png",x="/pub-blog/assets/image-20250116100749650.CU2Hxcp_.png",q="/pub-blog/assets/image-20250116100943842.U2_iIq05.png",P=JSON.parse('{"title":"Harmony OSNext 端云一体化（1）","description":"","frontmatter":{},"headers":[],"relativePath":"鸿蒙开发技巧/HarmonyOSNext 端云一体化/HarmonyOSNext 端云一体化（1）/HarmonyOSNext 端云一体化（1）.md","filePath":"鸿蒙开发技巧/HarmonyOSNext 端云一体化/HarmonyOSNext 端云一体化（1）/HarmonyOSNext 端云一体化（1）.md","lastUpdated":1737943445000}'),f={name:"鸿蒙开发技巧/HarmonyOSNext 端云一体化/HarmonyOSNext 端云一体化（1）/HarmonyOSNext 端云一体化（1）.md"};function S(y,a,k,v,N,O){return i(),o("div",null,a[0]||(a[0]=[e('<h1 id="harmony-osnext-端云一体化-1" tabindex="-1">Harmony OSNext 端云一体化（1） <a class="header-anchor" href="#harmony-osnext-端云一体化-1" aria-label="Permalink to &quot;Harmony OSNext 端云一体化（1）&quot;">​</a></h1><p>​ Cloud Foundation Kit（云开发服务）可以按需为应用提供云函数、云数据库、云存储等云端服务。应用运行所需的服务器和环境可以皆由云端平台提供，开发者只需关注应用的业务逻辑，而无需关心基础设施（例如：服务器、操作系统、容器等）。</p><p>​ DevEco Studio 中还提供了<a href="https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V5/agc-harmonyos-clouddev-overview-V5" target="_blank" rel="noreferrer">端云一体化开发</a>的开发体验，您可以基于统一的技术栈，高效、协同地完成端、云代码的编写、调试、编译和部署，极大提高构建 HarmonyOS 应用和元服务的效率。</p><h2 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h2><ul><li><strong>应用后端</strong> 快速构建应用或者元服务的后端服务，从而大幅简化应用开发与运维相关的事务，快速完成应用的构建</li><li><strong>计算密集型任务</strong> 当应用中出现计算密集型任务时，可以在云端及时申请足够的算力来支撑任务的执行。当任务结束时，可以立即释放资源，避免浪费。****</li><li><strong>适配类应用</strong> 通过 Cloud Foundation Kit 实现协议类型的转换，比如实现 IoT 中不同设备的协议适配。以及接入第三方平台，通过第三方平台提供的接口，实现业务的接入或者协作。</li><li><strong>突发大量访问</strong> 传统架构服务在某些特殊场景下，可能出现大量的访问。为保证业务高峰时，系统能稳定运行，一般需要购买高性能、昂贵的服务器，组建集群负载均衡。但是，当业务回落时，就导致了大量服务器的资源浪费。</li></ul><h2 id="包含的资源" tabindex="-1">包含的资源 <a class="header-anchor" href="#包含的资源" aria-label="Permalink to &quot;包含的资源&quot;">​</a></h2><p>端云一体主要包含的资源有</p><ul><li>云函数</li><li>云数据库</li><li>云存储</li></ul><h2 id="适配的项目类型" tabindex="-1">适配的项目类型 <a class="header-anchor" href="#适配的项目类型" aria-label="Permalink to &quot;适配的项目类型&quot;">​</a></h2><p>端云一体可以用在开发鸿蒙的<strong>应用</strong>或者是元服务上。因为考虑应用的上架需要软著+备案，而元服务的上架只需要备案。所以后续的教程中为了更加方便学习，我们会在元服务的环境下进行。</p><h2 id="学习流程" tabindex="-1">学习流程 <a class="header-anchor" href="#学习流程" aria-label="Permalink to &quot;学习流程&quot;">​</a></h2><p>稍后我们会延续着以下步骤，让大家可以尽可能的掌握端云一体的开发流程。</p><p><img src="'+r+'" alt="image-20250116090935066"></p><ol><li><a href="https://juejin.cn/post/7441761663701041161" target="_blank" rel="noreferrer">AGC 平台新建元服务</a></li><li>DevEco Studio 新建对应的项目工程</li><li>云函数的基本使用</li><li>云数据库的基本使用</li><li>云存储的基本使用</li></ol><h2 id="agc-平台新建元服务" tabindex="-1">AGC 平台新建元服务 <a class="header-anchor" href="#agc-平台新建元服务" aria-label="Permalink to &quot;AGC 平台新建元服务&quot;">​</a></h2><p>在 AGC 平台上新建服务的具体步骤可以参考这个文章 <a href="https://juejin.cn/post/7441761663701041161#heading-2" target="_blank" rel="noreferrer">HarmonyOS Next 最新 元服务新建到上架全流程</a>，这里就不再叙述了。</p><h2 id="deveco-studio-新建对应的项目工程" tabindex="-1">DevEco Studio 新建对应的项目工程 <a class="header-anchor" href="#deveco-studio-新建对应的项目工程" aria-label="Permalink to &quot;DevEco Studio 新建对应的项目工程&quot;">​</a></h2><p>本地在使用 DevEco Studio 新建工程时，需要新建的是端云一体化的元服务项目。</p><p><img src="'+l+'" alt="image-20250116091157505"></p><hr><p>此时，你的项目中会看到额外的云端相关的目录结构。</p><p><img src="'+s+'" alt="image-20250116091237635"></p><blockquote><p>特别需要注意的是，目前模拟器是不支持运行端云一体的项目的。所以为了方便测试，最好是具体<strong>真机</strong>。</p></blockquote><h2 id="运行到真机" tabindex="-1">运行到真机 <a class="header-anchor" href="#运行到真机" aria-label="Permalink to &quot;运行到真机&quot;">​</a></h2><p><img src="'+n+'" alt="image-20250116095501501"></p><ul><li>测试下云函数</li></ul><p><img src="'+p+'" alt="image-20250116095523881"></p><ul><li><p>测试下云数据库</p><blockquote><p>还没有在云端配置云数据库，所以此时的测试是没有反应的。</p></blockquote><p><img src="'+c+'" alt="image-20250116095646627"></p></li><li><p>测试下云存储</p><p><img src="'+d+'" alt="image-20250116095730657"></p></li></ul><h2 id="云端环境一览" tabindex="-1">云端环境一览 <a class="header-anchor" href="#云端环境一览" aria-label="Permalink to &quot;云端环境一览&quot;">​</a></h2><p>我们需要知道的是，在本地操作云端的资源时，本质上都是对云端的资源的一些操作。最终的操作成功与否，都会反映到真正的云端环境。</p><p>我们登录 AGC 平台，然后找到对应的项目。<em>这里是元服务的名称，不是项目的名称，你的元服务是归属于某个项目的</em></p><p><img src="'+g+'" alt="image-20250116100212297"></p><h3 id="云函数一览" tabindex="-1">云函数一览 <a class="header-anchor" href="#云函数一览" aria-label="Permalink to &quot;云函数一览&quot;">​</a></h3><p>云函数其实就是存放后端逻辑的部分。也是我们后期编写后端业务主要区域。</p><p><img src="'+m+'" alt="image-20250116100026310"></p><h3 id="云数据库一览" tabindex="-1">云数据库一览 <a class="header-anchor" href="#云数据库一览" aria-label="Permalink to &quot;云数据库一览&quot;">​</a></h3><p><img src="'+u+'" alt="image-20250116100343797"></p><p>这里的字段解释如下</p><table tabindex="0"><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>对象类型</td><td>表示你的数据中用到的实体的类型，比如用户、购物车都是不同的实体类型，也可以理解为你的数据表格</td></tr><tr><td>存储区</td><td>理解为数据库的名称，你可以在这里管理多个存储区-数据库</td></tr><tr><td>数据</td><td>你存储的实际的数据</td></tr></tbody></table><ul><li><p>对象类型</p><p><img src="'+h+'" alt="image-20250116100642788"></p></li><li><p>存储区</p><p><img src="'+b+'" alt="image-20250116100701709"></p></li><li><p>数据</p><p><img src="'+_+'" alt="image-20250116100720676"></p></li></ul><h3 id="云存储一览" tabindex="-1">云存储一览 <a class="header-anchor" href="#云存储一览" aria-label="Permalink to &quot;云存储一览&quot;">​</a></h3><p>云存储就是存放你物理文件的地方，比如图片、视频、音频等等。</p><p><img src="'+x+'" alt="image-20250116100749650"></p><h2 id="deveco-studio-中的云端资源" tabindex="-1">DevEco Studio 中的云端资源 <a class="header-anchor" href="#deveco-studio-中的云端资源" aria-label="Permalink to &quot;DevEco Studio 中的云端资源&quot;">​</a></h2><p>小伙伴们应该还记得，我们在新建端云一体云服务的时候，本地工程中也是多了一个文件夹的。 <code>CloudProgram</code></p><p><img src="'+q+'" alt="image-20250116100943842"></p><p>它里面的主要目录结构如下。</p><ol><li><strong>clouddb</strong> 存放数据库相关的文件</li><li><strong>cloudfunctions</strong> 存放云函数相关的文件</li><li><strong>cloud-config.json</strong> 存放云端环境相关的配置</li></ol><p>后期我们开发的思路可以是以下两种方式：</p><ol><li>全部都在 AGC 平台上操作，如编写云函数逻辑代码、搭建数据库、数据表</li><li><strong>尽量都在本地 DevEco Studio 工具中编写云函数逻辑代码、调试代码、搭建数据库、数据集表</strong></li></ol><p>以上两种方式都可以。但是为了刚好的开发体验，我们是建议使用方式 2.</p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文介绍了 HarmonyOS Next 中端云一体化开发的基础概念和环境搭建。通过 Cloud Foundation Kit，开发者可以更便捷地使用云函数、云数据库和云存储等云端服务，从而专注于业务逻辑的开发，而无需过多关注基础设施的搭建和维护。</p><p>主要内容包括：</p><ul><li>端云一体化的应用场景和主要资源</li><li>AGC 平台上创建元服务的流程</li><li>DevEco Studio 中创建端云一体化项目的步骤</li><li>云端环境（云函数、云数据库、云存储）的基本介绍</li><li>本地开发环境的目录结构和开发方式建议</li></ul><p>通过本文的学习，读者可以对 HarmonyOS Next 的端云一体化开发有一个整体的认识，为后续深入学习打下基础。建议开发者优先选</p><p>择在 DevEco Studio 中进行开发，这样可以获得更好的开发体验。</p><hr><p>如果你兴趣想要了解更多的鸿蒙应用开发细节和最新资讯，欢迎在评论区留言或者私信或者看我个人信息，可以加入技术交流群。</p>',59)]))}const C=t(f,[["render",S]]);export{P as __pageData,C as default};
